---
#################### Packetbeat Configuration #########################

# This file is an example configuration file highlighting only the most common
# options. The packetbeat.reference.yml file from the same directory contains all the
# supported options with more comments. You can use it as a reference.
#
# You can find the full configuration reference here:
# https://www.elastic.co/guide/en/beats/packetbeat/index.html

#============================== Network device ================================

# Select the network interface to sniff the data. On Linux, you can use the
# "any" keyword to sniff on all connected interfaces.
packetbeat.interfaces.device: any

#================================== Flows =====================================

# Set `enabled: false` or comment out all options to disable flows reporting.
packetbeat.flows:
  # Set network flow timeout. Flow is killed if no packet is received before being
  # timed out.
  timeout: 30s

  # Configure reporting period. If set to -1, only killed flows will be reported
  period: 10s

#========================== Transaction protocols =============================

packetbeat.protocols:
- type: icmp
  # Enable ICMPv4 and ICMPv6 monitoring. Default: false
  enabled: true

#- type: amqp
#  # Configure the ports where to listen for AMQP traffic. You can disable
#  # the AMQP protocol by commenting out the list of ports.
#  ports: [5672]
#
#- type: cassandra
#  #Cassandra port for traffic monitoring.
#  ports: [9042]
#
- type: dhcpv4
  # Configure the DHCP for IPv4 ports.
  ports: [67, 68]

- type: dns
  # Configure the ports where to listen for DNS traffic. You can disable
  # the DNS protocol by commenting out the list of ports.
  ports: [53]

- type: http
  # Configure the ports where to listen for HTTP traffic. You can disable
  # the HTTP protocol by commenting out the list of ports.
  ports: [80, 5000]

#- type: memcache
#  # Configure the ports where to listen for memcache traffic. You can disable
#  # the Memcache protocol by commenting out the list of ports.
#  ports: [11211]

#- type: mysql
#  # Configure the ports where to listen for MySQL traffic. You can disable
#  # the MySQL protocol by commenting out the list of ports.
#  ports: [3306,3307]

- type: pgsql
  # Configure the ports where to listen for Pgsql traffic. You can disable
  # the Pgsql protocol by commenting out the list of ports.
  ports: [5432]

#- type: redis
#  # Configure the ports where to listen for Redis traffic. You can disable
#  # the Redis protocol by commenting out the list of ports.
#  ports: [6379]

#- type: thrift
#  # Configure the ports where to listen for Thrift-RPC traffic. You can disable
#  # the Thrift-RPC protocol by commenting out the list of ports.
#  ports: [9090]
#
#- type: mongodb
#  # Configure the ports where to listen for MongoDB traffic. You can disable
#  # the MongoDB protocol by commenting out the list of ports.
#  ports: [27017]

#- type: nfs
#  # Configure the ports where to listen for NFS traffic. You can disable
#  # the NFS protocol by commenting out the list of ports.
#  ports: [2049]

- type: tls
  # Configure the ports where to listen for TLS traffic. You can disable
  # the TLS protocol by commenting out the list of ports.
  ports:
    - 443   # HTTPS
    #- 993   # IMAPS
    #- 995   # POP3S
    #- 5223  # XMPP over SSL
    #- 8443
    #- 8883  # Secure MQTT
    #- 9243  # Elasticsearch

#==================== Elasticsearch template setting ==========================

setup.template.settings:
  index.number_of_shards: 1
  #index.codec: best_compression
  #_source.enabled: false

#================================ General =====================================

# The name of the shipper that publishes the network data. It can be used to group
# all the transactions sent by a single shipper in the web interface.
#name: {{ ansible_host }}

# The tags of the shipper are included in their own field with each
# transaction published.
#tags: ["service-X", "web-tier"]

# Optional fields that you can specify to add additional information to the
# output.
#fields:
#  env: staging

#============================== Dashboards =====================================
# These settings control loading the sample dashboards to the Kibana index. Loading
# the dashboards is disabled by default and can be enabled either by setting the
# options here, or by using the `-setup` CLI flag or the `setup` command.
setup.dashboards.enabled: false

#============================== Template =====================================
# A template is used to set the mapping in Elasticsearch
# By default template loading is enabled and the template is loaded.
# These settings can be adjusted to load your own template or overwrite existing ones.

# Set to false to disable template loading.
setup.template.enabled: false

#============================== Setup ILM =====================================
# Configure index lifecycle management (ILM). These settings create a write
# alias and add additional settings to the index template. When ILM is enabled,
# output.elasticsearch.index is ignored, and the write alias is used to set the
# index name.

# Enable ILM support. Valid values are true, false, and auto. When set to auto
# (the default), the Beat uses index lifecycle management when it connects to a
# cluster that supports ILM; otherwise, it creates daily indices.
setup.ilm.enabled: auto

# Set the prefix used in the index lifecycle write alias name. The default alias
# name is 'filebeat-%{[agent.version]}'.
#setup.ilm.rollover_alias: "packetbeat"

# Set the rollover index pattern. The default is "%{now/d}-000001".
#setup.ilm.pattern: "{now/d}-000001"

# Set the lifecycle policy name. The default policy name is
# 'filebeat-%{[agent.version]}'.
#setup.ilm.policy_name: "mypolicy"

# The path to a JSON file that contains a lifecycle policy configuration. Used
# to load your own lifecycle policy.
#setup.ilm.policy_file:

# Disable the check for an existing lifecycle policy. The default is false. If
# you disable this check, set setup.ilm.overwrite: true so the lifecycle policy
# can be installed.
setup.ilm.check_exists: true

# Overwrite the lifecycle policy at startup. The default is false.
setup.ilm.overwrite: false

#================================ Outputs =====================================

# Configure what output to use when sending the data collected by the beat.

{% if elk_auth_type_cloud_id %}
#-------------------------- Elastic Cloud -----------------------------

# These settings simplify using Filebeat with the Elastic Cloud (https://cloud.elastic.co/).

# The cloud.id setting overwrites the `output.elasticsearch.hosts` and
# `setup.kibana.host` options.
# You can find the `cloud.id` in the Elastic Cloud web UI.
cloud.id: "{{ monitoring_account.value.cloud_id }}"

# The cloud.auth setting overwrites the `output.elasticsearch.username` and
# `output.elasticsearch.password` settings. The format is `<user>:<pass>`.
cloud.auth: "{{ monitoring_account.value.username }}:{{ monitoring_account.value.password }}"

{% else %}
#-------------------------- Elasticsearch output ------------------------------
output.elasticsearch:
  # Array of hosts to connect to.
  hosts: ["{{ es_url }}"]

  # Optional protocol and basic auth credentials.
  protocol: "https"
{% if username_password_auth %}
  username: "{{ monitoring_account.value.username }}"
  password: "${ES_PASSWORD}"
{% endif %}
{% if api_key_auth %}
  api_key: "${ES_API_KEY}"
{% endif %}
{% endif %}

#================================ Processors =====================================

# Configure processors to enhance or manipulate events generated by the beat.

processors:
  - add_host_metadata: ~
  #- add_cloud_metadata: ~
  - add_docker_metadata: ~
  #- add_kubernetes_metadata: ~

#================================ Logging =====================================

# Sets log level. The default log level is info.
# Available log levels are: critical, error, warning, info, debug
logging.level: warning

# At debug level, you can selectively enable logging only for some components.
# To enable all selectors use ["*"]. Examples of other selectors are "beat",
# "publish", "service".
#logging.selectors: ["*"]

#================================ Monitoring =====================================
monitoring.enabled: true
#monitoring.cluster_uuid: "{{ cluster_uuid }}"
...
